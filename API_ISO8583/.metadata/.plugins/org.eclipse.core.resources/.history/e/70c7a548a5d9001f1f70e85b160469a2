package BankPLAPI;

import org.jpos.iso.*;
import org.jpos.iso.packager.ISO87APackager;
import org.jpos.util.Log;
import org.jpos.util.Logger;
import org.jpos.util.SimpleLogListener;

import java.io.IOException;
import java.net.Socket;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class BankPhatLenhAPI {

    private static final Map<String, Account> ACCOUNTS_SOURCE = new HashMap<>();
    static {
        ACCOUNTS_SOURCE.put("111111", new Account("111111", 2_000_000L, "ACTIVE"));
        ACCOUNTS_SOURCE.put("222222", new Account("222222", 1_000_000L, "ACTIVE"));
        ACCOUNTS_SOURCE.put("333333", new Account("333333", 5_000_000L, "LOCKED"));
    }

    private String lastSource = null;
    private String lastDest   = null;

    private static final String API1_URL = "http://localhost:8081/api/isoRequest";

    public static void main(String[] args) {
        BankPhatLenhAPI app = new BankPhatLenhAPI();
        app.runMenu();
    }

    private void runMenu() {
        Scanner sc = new Scanner(System.in);
        while (true) {
            System.out.println("\n=== BankPhatLenhAPI ===");
            System.out.println("1. Inquiry (432020)");
            System.out.println("2. Payment (912020)");
            System.out.println("0. Exit");
            System.out.print("Chọn: ");
            String choice = sc.nextLine().trim();
            if ("0".equals(choice)) {
                System.out.println("Kết thúc.");
                break;
            }

            System.out.print("sourcePan: ");
            String sPan = sc.nextLine().trim();
            System.out.print("destPan: ");
            String dPan = sc.nextLine().trim();

            if ("1".equals(choice)) {
                doInquiry(sPan, dPan);
            } else if ("2".equals(choice)) {
                System.out.print("amount: ");
                long amt = Long.parseLong(sc.nextLine().trim());
                doPayment(sPan, dPan, amt);
            } else {
                System.out.println("Lựa chọn không hợp lệ!");
            }
        }
    }

    private void doInquiry(String sourcePan, String destPan) {
        String rc = checkSource(sourcePan, 0L, false);
        if (!"00".equals(rc)) {
            System.out.println("[BankPhatLenhAPI] inquiry => field39=" + rc + " (source fail)");
            return;
        }

        String jsonReq = "{\"mti\":\"0200\",\"processingCode\":\"432020\","
                + "\"sourcePan\":\"" + sourcePan + "\","
                + "\"destinationPan\":\"" + destPan + "\","
                + "\"transactionAmount\":\"0\"}";

        String resp = postJson(API1_URL, jsonReq);
        System.out.println("[BankPhatLenhAPI] inquiry => respJSON=" + resp);

        if (resp.contains("\"responseCode\":\"00\"")) {
            lastSource = sourcePan;
            lastDest   = destPan;
        }
    }

    private void doPayment(String sourcePan, String destPan, long amt) {
        if (!matchInquiry(sourcePan, destPan)) {
            System.out.println("[BankPhatLenhAPI] mismatch => field39=94");
            return;
        }

        String rc = checkSource(sourcePan, amt, true);
        if (!"00".equals(rc)) {
            System.out.println("[BankPhatLenhAPI] payment => field39=" + rc + " (source fail)");
            return;
        }

        String amtStr = String.format("%012d", amt);
        String jsonReq = "{\"mti\":\"0200\",\"processingCode\":\"912020\","
                + "\"sourcePan\":\"" + sourcePan + "\","
                + "\"destinationPan\":\"" + destPan + "\","
                + "\"transactionAmount\":\"" + amtStr + "\"}";

        String resp = postJson(API1_URL, jsonReq);
        System.out.println("[BankPhatLenhAPI] payment => respJSON=" + resp);

        if (!resp.contains("\"responseCode\":\"00\"")) {
        } else {
            lastSource = null;
            lastDest   = null;
        }
    }

    private String checkSource(String pan, long amt, boolean isPayment) {
        Account a = ACCOUNTS_SOURCE.get(pan);
        if (a == null) return "14";
        if (!"ACTIVE".equalsIgnoreCase(a.status)) return "62";
        if (isPayment) {
            if (a.balance < amt) return "51";
            a.balance -= amt;
        }
        return "00";
    }

    private boolean matchInquiry(String sPan, String dPan) {
        if (lastSource == null || lastDest == null) return false;
        return (lastSource.equals(sPan) && lastDest.equals(dPan));
    }

    private String postJson(String urlStr, String body) {
        try {
            ISOChannel channel = new ISOChannel("localhost", 9090);  // Tạo kết nối tới Napas qua cổng 9090
            channel.setPackager(new ISO87APackager());

            // Tạo ISOMsg và gói dữ liệu JSON thành ISO
            ISOMsg isoRequest = new ISOMsg();
            isoRequest.setMTI("0200");
            isoRequest.set(2, "111111");  // Source PAN
            isoRequest.set(47, "888888"); // Destination PAN
            isoRequest.set(3, "432020"); // Processing Code
            isoRequest.set(4, body);     // Transaction Amount

            // Gửi ISOMsg qua ISOChannel (JPOS)
            channel.send(isoRequest);

            // Nhận phản hồi từ Napas (sau khi gửi)
            ISOMsg isoResponse = channel.receive();
            System.out.println("[BankPhatLenhAPI] response => " + isoResponse);

            // Chuyển đổi phản hồi ISO thành JSON
            return isoToJson(isoResponse);

        } catch (ISOException | IOException e) {
            e.printStackTrace();
            return "{\"error\":\"" + e.getMessage() + "\"}";
        }
    }

    // Chuyển ISO message thành JSON string
    private String isoToJson(ISOMsg iso) throws ISOException {
        StringBuilder sb = new StringBuilder("{");
        sb.append("\"mti\":\"").append(iso.getMTI()).append("\",");

        if (iso.hasField(2)) sb.append("\"sourcePan\":\"").append(iso.getString(2)).append("\",");
        if (iso.hasField(3)) sb.append("\"processingCode\":\"").append(iso.getString(3)).append("\",");
        if (iso.hasField(4)) sb.append("\"transactionAmount\":\"").append(iso.getString(4)).append("\",");
        if (iso.hasField(39)) sb.append("\"responseCode\":\"").append(iso.getString(39)).append("\",");
        if (iso.hasField(47)) sb.append("\"destinationPan\":\"").append(iso.getString(47)).append("\",");

        // Xóa dấu phẩy cuối cùng và đóng ngoặc
        if (sb.charAt(sb.length() - 1) == ',') sb.deleteCharAt(sb.length() - 1);
        sb.append("}");
        return sb.toString();
    }

    static class Account {
        String pan;
        long balance;
        String status;

        public Account(String p, long b, String s) {
            this.pan = p;
            this.balance = b;
            this.status = s;
        }
    }
}
