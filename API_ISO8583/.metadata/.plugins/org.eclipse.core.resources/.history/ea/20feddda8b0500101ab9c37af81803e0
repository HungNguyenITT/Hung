package API1.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import API1.service.Api1Service;
import java.util.HashMap;
import java.util.Map;

@RestController
@RequestMapping("/api1")
public class API1Controller {

    @Autowired
    private Api1Service api1Service;

    @PostMapping(value = "/inquiry", consumes = MediaType.APPLICATION_JSON_VALUE, produces = MediaType.APPLICATION_JSON_VALUE)
    public Map<String, String> handleInquiry(@RequestBody Map<String, String> body) {
        System.out.println("[API1Controller] Received inquiry: " + body);
        try {
            Map<String, String> response = api1Service.handleInquiry(body);
            if (response == null || response.isEmpty()) {
                return createErrorResponse("No response from Napas");
            }
            return response;
        } catch (Exception e) {
            e.printStackTrace();
            return createErrorResponse("Error processing inquiry: " + e.getMessage());
        }
    }

    @PostMapping(value = "/payment", consumes = MediaType.APPLICATION_JSON_VALUE, produces = MediaType.APPLICATION_JSON_VALUE)
    public Map<String, String> handlePayment(@RequestBody Map<String, String> body) {
        System.out.println("[API1Controller] Received payment: " + body);
        try {
            Map<String, String> response = api1Service.handlePayment(body);
            if (response == null || response.isEmpty()) {
                return createErrorResponse("No response from Napas");
            }
            return response;
        } catch (Exception e) {
            e.printStackTrace();
            return createErrorResponse("Error processing payment: " + e.getMessage());
        }
    }

    private Map<String, String> createErrorResponse(String message) {
        Map<String, String> errorResponse = new HashMap<>();
        errorResponse.put("MTI", "0210");
        errorResponse.put("F39", "96"); // System Malfunction
        errorResponse.put("error", message);
        return errorResponse;
    }
}