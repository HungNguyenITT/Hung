//package API1.socket;
//
//
//import org.jpos.iso.ISOMsg;
//import org.jpos.iso.ISOException;
//import org.jpos.iso.packager.ISO87APackager;
//import org.springframework.stereotype.Component;
//import utils.IsoDebugHelper;
//import utils.IsoSocketUtils;
//import utils.JsonMapperUtil;
//
//import javax.annotation.PostConstruct;
//import java.io.*;
//import java.net.Socket;
//import java.net.SocketTimeoutException;
//import java.util.concurrent.*;
//import java.util.Map;
//import java.util.HashMap;
//
//@Component
//public class API1Socket {
//
//    private static final String NAPAS_HOST = "localhost";
//    private static final int NAPAS_PORT = 1414;  // Napas cổng 1414 cho bank 970403
//    private Socket socket;
//    private OutputStream out;
//    private InputStream in;
//    private final Map<String, CompletableFuture<ISOMsg>> pendingMap = new ConcurrentHashMap<>();
//    private final ExecutorService readerThread = Executors.newSingleThreadExecutor();
//
//    @PostConstruct
//    public void start() {
//        new Thread(() -> connectNapas()).start();
//    }
//
//    private void connectNapas() {
//        while (true) {
//            try {
//                socket = new Socket(NAPAS_HOST, NAPAS_PORT);
//                socket.setSoTimeout(0);
//                out = socket.getOutputStream();
//                in = socket.getInputStream();
//                System.out.println("[API1] Connected to Napas at " + NAPAS_HOST + ":" + NAPAS_PORT);
//                startReadingLoop();
//                break;
//            } catch (Exception e) {
//                e.printStackTrace();
//                System.err.println("[API1] Connection to Napas failed, retrying in 5s...");
//                try { Thread.sleep(5000); } catch (InterruptedException ignore) {}
//            }
//        }
//    }
//
//    private void startReadingLoop() {
//        readerThread.submit(() -> {
//            ISO87APackager packager = new ISO87APackager();
//            while (true) {
//                try {
//                    ISOMsg iso = null;
//                    try {
//                        iso = IsoSocketUtils.readIsoMessageWithHeader(in, packager);
//                    } catch (SocketTimeoutException te) {
//                        continue;
//                    } catch (EOFException eof) {
//                        System.err.println("[API1] Napas disconnected");
//                        break;
//                    } catch (Exception e) {
//                        e.printStackTrace();
//                        break;
//                    }
//                    if (iso == null) {
//                        System.out.println("[API1] Read null ISO, breaking loop");
//                        break;
//                    }
//                    IsoDebugHelper.debugIso("[API1] Inbound from Napas", iso);
//                    String stan = iso.hasField(11) ? iso.getString(11) : null;
//                    CompletableFuture<ISOMsg> fut = (stan == null) ? null : pendingMap.remove(stan);
//                    if (fut != null) {
//                        fut.complete(iso);
//                    } else {
//                        handleInboundRequest(iso);
//                    }
//                } catch (Exception e) {
//                    e.printStackTrace();
//                    break;
//                }
//            }
//            System.out.println("[API1] Read loop ended; reconnecting to Napas...");
//            closeSocket();
//            connectNapas();
//        });
//    }
//
//    private void handleInboundRequest(ISOMsg req) throws Exception {
//        String pc = req.hasField(3) ? req.getString(3) : "";
//        String endpoint;
//        if ("432020".equals(pc))
//            endpoint = "/inquiry";
//        else if ("912020".equals(pc))
//            endpoint = "/payment";
//        else {
//            return;
//        }
//        String src = req.hasField(2) ? req.getString(2) : "";
//        String dst = req.hasField(103) ? req.getString(103) : "";
//        long amt = 0;
//        if (req.hasField(4)) {
//            String s = req.getString(4).replaceAll("^0+", "");
//            if (!s.isEmpty()) amt = Long.parseLong(s);
//        }
//        // Dùng mapper để tạo JSON
//        Map<String, String> jsonMap = new HashMap<>();
//        jsonMap.put("sourcePan", src);
//        jsonMap.put("destPan", dst);
//        jsonMap.put("amount", String.valueOf(amt));
//        jsonMap.put("f100", req.getString(100));
//        String jsonBody = JsonMapperUtil.toJson(jsonMap);
//        
//        String respJson = doHttpPost("http://localhost:1111/zalo" + endpoint, jsonBody);
//        if (respJson == null) {
//            System.out.println("[API1] No response from ZaloPay for " + endpoint);
//            return;
//        }
//        String rc = "96";
//        int idx = respJson.indexOf("\"field39\":\"");
//        if (idx >= 0) {
//            int st = idx + ("\"field39\":\"").length();
//            int ed = respJson.indexOf("\"", st);
//            if (ed > st) rc = respJson.substring(st, ed);
//        }
//        ISOMsg resp = (ISOMsg) req.clone();
//        resp.setMTI("0210");
//        resp.set(39, rc);
//        sendMessage(resp);
//    }
//
//    public ISOMsg sendAndWaitResponse(ISOMsg iso, long timeoutMs) throws ISOException, IOException {
//        if (!iso.hasField(11)) {
//            throw new ISOException("[API1] Missing field(11)");
//        }
//        String stan = iso.getString(11);
//        CompletableFuture<ISOMsg> fut = new CompletableFuture<>();
//        pendingMap.put(stan, fut);
//        sendMessage(iso);
//        if (timeoutMs > 0) {
//            ScheduledExecutorService sch = Executors.newSingleThreadScheduledExecutor();
//            sch.schedule(() -> {
//                if (!fut.isDone()) fut.complete(null);
//                sch.shutdown();
//            }, timeoutMs, TimeUnit.MILLISECONDS);
//        }
//        try {
//            return fut.get(timeoutMs + 500, TimeUnit.MILLISECONDS);
//        } catch(Exception e) {
//            return null;
//        } finally {
//            pendingMap.remove(stan);
//        }
//    }
//
//    public void sendMessage(ISOMsg iso) throws ISOException, IOException {
//        IsoDebugHelper.debugIso("[API1] => Napas", iso);
//        IsoSocketUtils.sendIsoMessageWithHeader(out, iso);
//        out.flush();
//    }
//
//    private String doHttpPost(String url, String body) {
//        java.net.HttpURLConnection conn = null;
//        try {
//            java.net.URL u = new java.net.URL(url);
//            conn = (java.net.HttpURLConnection) u.openConnection();
//            conn.setRequestMethod("POST");
//            conn.setDoOutput(true);
//            conn.setRequestProperty("Content-Type", "application/json; charset=UTF-8");
//            conn.setConnectTimeout(5000);
//            conn.setReadTimeout(5000);
//            conn.connect();
//            OutputStream o = conn.getOutputStream();
//            o.write(body.getBytes("UTF-8"));
//            o.close();
//            ByteArrayOutputStream baos = new ByteArrayOutputStream();
//            InputStream in = conn.getInputStream();
//            byte[] buf = new byte[4096];
//            int len;
//            while ((len = in.read(buf)) != -1) {
//                baos.write(buf, 0, len);
//            }
//            in.close();
//            return baos.toString("UTF-8");
//        } catch(Exception e) {
//            e.printStackTrace();
//        } finally {
//            if (conn != null) conn.disconnect();
//        }
//        return null;
//    }
//
//    private void closeSocket() {
//        try {
//            if (socket != null)
//                socket.close();
//        } catch(Exception e) {
//            e.printStackTrace();
//        }
//    }
//}
//
