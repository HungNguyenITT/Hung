package API2.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.*;
import API2.service.Api2Service;
import java.util.HashMap;
import java.util.Map;

@RestController
@RequestMapping("/api2")
public class API2Controller {

    @Autowired
    private Api2Service api2Service;

    @PostMapping(value = "/inquiry", consumes = MediaType.APPLICATION_JSON_VALUE, produces = MediaType.APPLICATION_JSON_VALUE)
    public Map<String, String> handleInquiry(@RequestBody Map<String, String> body) {
        System.out.println("[API2Controller] Received inquiry: " + body);
        try {
            Map<String, String> response = api2Service.handleInquiry(body);
            if (response == null || response.isEmpty()) {
                return createErrorResponse("No response from Napas");
            }
            return response;
        } catch (Exception e) {
            e.printStackTrace();
            return createErrorResponse("Error processing inquiry: " + e.getMessage());
        }
    }

    @PostMapping(value = "/payment", consumes = MediaType.APPLICATION_JSON_VALUE, produces = MediaType.APPLICATION_JSON_VALUE)
    public Map<String, String> handlePayment(@RequestBody Map<String, String> body) {
        System.out.println("[API2Controller] Received payment: " + body);
        try {
            Map<String, String> response = api2Service.handlePayment(body);
            if (response == null || response.isEmpty()) {
                return createErrorResponse("No response from Napas");
            }
            return response;
        } catch (Exception e) {
            e.printStackTrace();
            return createErrorResponse("Error processing payment: " + e.getMessage());
        }
    }

    private Map<String, String> createErrorResponse(String message) {
        Map<String, String> errorResponse = new HashMap<>();
        errorResponse.put("MTI", "0210");
        errorResponse.put("F39", "96"); 
        errorResponse.put("error", message);
        return errorResponse;
    }
}
